/*
 * Copyright (c) 2016-2024 Broadcom. All Rights Reserved.
 * The term "Broadcom" refers to Broadcom Inc. and/or its subsidiaries.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Injectable } from '@angular/core';
import { Subject } from 'rxjs';
import * as i0 from "@angular/core";
export class NgControlService {
    constructor() {
        // Observable to subscribe to the control, since its not available immediately for projected content
        this._controlChanges = new Subject();
        this._helpers = new Subject();
    }
    get controlChanges() {
        return this._controlChanges.asObservable();
    }
    get helpersChange() {
        return this._helpers.asObservable();
    }
    setControl(control) {
        this._controlChanges.next(control);
    }
    setHelpers(state) {
        this._helpers.next(state);
    }
}
NgControlService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: NgControlService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });
NgControlService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: NgControlService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: NgControlService, decorators: [{
            type: Injectable
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmctY29udHJvbC5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvYW5ndWxhci9zcmMvZm9ybXMvY29tbW9uL3Byb3ZpZGVycy9uZy1jb250cm9sLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7O0dBS0c7QUFFSCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTNDLE9BQU8sRUFBYyxPQUFPLEVBQUUsTUFBTSxNQUFNLENBQUM7O0FBVTNDLE1BQU0sT0FBTyxnQkFBZ0I7SUFEN0I7UUFFRSxvR0FBb0c7UUFDNUYsb0JBQWUsR0FBRyxJQUFJLE9BQU8sRUFBYSxDQUFDO1FBRTNDLGFBQVEsR0FBRyxJQUFJLE9BQU8sRUFBVyxDQUFDO0tBaUIzQztJQWZDLElBQUksY0FBYztRQUNoQixPQUFPLElBQUksQ0FBQyxlQUFlLENBQUMsWUFBWSxFQUFFLENBQUM7SUFDN0MsQ0FBQztJQUVELElBQUksYUFBYTtRQUNmLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUN0QyxDQUFDO0lBRUQsVUFBVSxDQUFDLE9BQWtCO1FBQzNCLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ3JDLENBQUM7SUFFRCxVQUFVLENBQUMsS0FBYztRQUN2QixJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUM1QixDQUFDOzs2R0FwQlUsZ0JBQWdCO2lIQUFoQixnQkFBZ0I7MkZBQWhCLGdCQUFnQjtrQkFENUIsVUFBVSIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTYtMjAyNCBCcm9hZGNvbS4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIFRoZSB0ZXJtIFwiQnJvYWRjb21cIiByZWZlcnMgdG8gQnJvYWRjb20gSW5jLiBhbmQvb3IgaXRzIHN1YnNpZGlhcmllcy5cbiAqIFRoaXMgc29mdHdhcmUgaXMgcmVsZWFzZWQgdW5kZXIgTUlUIGxpY2Vuc2UuXG4gKiBUaGUgZnVsbCBsaWNlbnNlIGluZm9ybWF0aW9uIGNhbiBiZSBmb3VuZCBpbiBMSUNFTlNFIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHByb2plY3QuXG4gKi9cblxuaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTmdDb250cm9sIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSwgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuXG5leHBvcnQgaW50ZXJmYWNlIEhlbHBlcnMge1xuICBzaG93PzogYm9vbGVhbjtcbiAgc2hvd0ludmFsaWQ/OiBib29sZWFuO1xuICBzaG93VmFsaWQ/OiBib29sZWFuO1xuICBzaG93SGVscGVyPzogYm9vbGVhbjtcbn1cblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIE5nQ29udHJvbFNlcnZpY2Uge1xuICAvLyBPYnNlcnZhYmxlIHRvIHN1YnNjcmliZSB0byB0aGUgY29udHJvbCwgc2luY2UgaXRzIG5vdCBhdmFpbGFibGUgaW1tZWRpYXRlbHkgZm9yIHByb2plY3RlZCBjb250ZW50XG4gIHByaXZhdGUgX2NvbnRyb2xDaGFuZ2VzID0gbmV3IFN1YmplY3Q8TmdDb250cm9sPigpO1xuXG4gIHByaXZhdGUgX2hlbHBlcnMgPSBuZXcgU3ViamVjdDxIZWxwZXJzPigpO1xuXG4gIGdldCBjb250cm9sQ2hhbmdlcygpOiBPYnNlcnZhYmxlPE5nQ29udHJvbD4ge1xuICAgIHJldHVybiB0aGlzLl9jb250cm9sQ2hhbmdlcy5hc09ic2VydmFibGUoKTtcbiAgfVxuXG4gIGdldCBoZWxwZXJzQ2hhbmdlKCk6IE9ic2VydmFibGU8SGVscGVycz4ge1xuICAgIHJldHVybiB0aGlzLl9oZWxwZXJzLmFzT2JzZXJ2YWJsZSgpO1xuICB9XG5cbiAgc2V0Q29udHJvbChjb250cm9sOiBOZ0NvbnRyb2wpIHtcbiAgICB0aGlzLl9jb250cm9sQ2hhbmdlcy5uZXh0KGNvbnRyb2wpO1xuICB9XG5cbiAgc2V0SGVscGVycyhzdGF0ZTogSGVscGVycykge1xuICAgIHRoaXMuX2hlbHBlcnMubmV4dChzdGF0ZSk7XG4gIH1cbn1cbiJdfQ==